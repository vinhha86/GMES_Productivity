diff a/classic/src/view/pcontract/PContractViewController.js b/classic/src/view/pcontract/PContractViewController.js	(rejected hunks)
@@ -3,10 +3,10 @@
     alias: 'controller.PContractViewController',
     init: function () {
         this.onActivate();
-        if (this.getView().IdPContract > 0){
-           this.onLoadData(this.getView().IdPContract,null);
-           dockBottomBar = this.lookupReference('dockBottomBar');
-           dockBottomBar.setHidden(true);
+        if (this.getView().IdPContract > 0) {
+            this.onLoadData(this.getView().IdPContract, null);
+            dockBottomBar = this.lookupReference('dockBottomBar');
+            dockBottomBar.setHidden(true);
         }
     },
     listen: {
@@ -37,15 +37,17 @@
         }
         else {
             viewmodel.set('ishiddenActionColumn', false);
-            if(newCard.xtype == 'PContract_PO_Main'){
+            if (newCard.xtype == 'PContract_PO_Main') {
                 var storeproduct = viewmodel.getStore('PContractProductTreeStore');
                 storeproduct.loadStore(viewmodel.get('PContract.id'));
             } else {
-                if(newCard.xtype == 'PContractSKUMainView'){
-                    var PContractPOList = viewmodel.getStore('PContractPOList');
-                    PContractPOList.loadStoreByContract(viewmodel.get('PContract.id'));
+                if (newCard.xtype == 'PContractSKUMainView') {
+                    if (viewmodel.get('IdProduct') > 0) {
+                        var PContractPOList = viewmodel.getStore('PContractPOList');
+                        PContractPOList.loadStore(viewmodel.get('PContract.id'), viewmodel.get('IdProduct'));
+                    }
                 } else {
-                    if(newCard.xtype == 'POrderCreating_New_View'){
+                    if (newCard.xtype == 'POrderCreating_New_View') {
                         var PContractPOList = viewmodel.getStore('PContractPOList');
                         PContractPOList.loadStoreByContract(viewmodel.get('PContract.id'));
                     }
@@ -92,6 +94,8 @@
         var BranchStore = viewmodel.getStore('BranchStore');
         var SeasonStore = viewmodel.getStore('SeasonStore');
         var UnitStore = viewmodel.getStore('UnitStore');
+        var MarketStore = viewmodel.getStore('MarketStore');
+        var PContractTypeStore = viewmodel.getStore('ContractTypes');
 
         KHStore.loadStore(10, false);
         VenderStore.loadStore(11, false);
@@ -99,6 +103,8 @@
         BranchStore.loadStore(false);
         SeasonStore.loadStore(false);
         UnitStore.loadStore();
+        MarketStore.loadStore(1);
+        PContractTypeStore.loadStore();
     },
     onLuu: function () {
         var me = this.getView();
@@ -117,6 +123,11 @@
         data.usercreatedid_link = 0;
         data.datecreated = '';
 
+        if (data.payer == 1)
+            data.orgpayerid_link = data.orgvendorid_link;
+        else
+            data.orgpayerid_link = data.orgbuyerid_link;
+
         params.data = data;
         params.msgtype = "PContract_CREATE";
         params.message = "Tạo đơn hàng";
@@ -164,5 +175,5 @@
                 }
                 me.setLoading(false);
             })
-    }     
+    }
 })
\ No newline at end of file
